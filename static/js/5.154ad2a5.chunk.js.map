{"version":3,"sources":["components/Dialogs/index.module.css","components/Dialogs/Dialog/index.jsx","components/Dialogs/Message/index.jsx","components/Dialogs/Dialogs.jsx","HOC/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Text","Typography","Dialog","id","ava","name","to","className","cn","dialogs__user","size","src","alt","icon","Message","text","messageList__from","Title","maxLength50","maxValueCreator","AddMessageForm","props","onSubmit","handleSubmit","messageAdd","createField","TextareaField","required","type","reduxForm","form","Dialogs","dialogElements","dialogList","map","key","messageElements","messageList","dialogs__wrapper","dialogs__names","level","dialogs__messages","formData","onAddMessage","newMessage","withAuthRedirect","Component","WithAuthRedirectComponent","this","auth","React","connect","state","isAuth","compose","dialogsPage"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,eAAiB,gCAAgC,kBAAoB,mCAAmC,gBAAkB,iCAAiC,cAAgB,iC,iHCI3OC,EAAQC,IAARD,KAcQE,EAbA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,KACtB,OACI,6BACI,kBAAC,IAAD,CAASC,GAAI,YAAYH,EAAII,UAAWC,IAAGC,eACtCL,EACG,kBAAC,IAAD,CAAQM,KAAO,QAAQC,IAAKP,EAAKQ,IAAI,QACpC,kBAAC,IAAD,CAAQF,KAAK,QAAQG,KAAK,SAC/B,kBAACb,EAAD,SAAQK,MCThBL,EAASC,IAATD,KAUOc,EARC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACd,OACI,6BACI,kBAAC,EAAD,CAAMR,UAAWC,IAAGQ,mBAAoBD,K,kCCA5CE,EAAUhB,IAAVgB,MAEFC,EAAcC,YAAgB,IAEhCC,EAAiB,SAACC,GAClB,OACI,0BAAMC,SAAYD,EAAME,aAAchB,UAAWC,IAAGgB,YAC/CC,YAAY,aAAcC,IAAe,sIAA6B,CAACC,IAAUT,IAClF,6BACI,kBAAC,IAAD,CAAQU,KAAM,WAAd,8GAMhBR,EAAiBS,YAAU,CAACC,KAAM,cAAjBD,CAAgCT,GAEjD,IAgCeW,EAhCC,SAACV,GACb,IAAIW,EAAiBX,EAAMY,WAAWC,KAAI,gBAAE/B,EAAF,EAAEA,GAAIE,EAAN,EAAMA,KAAMD,EAAZ,EAAYA,IAAZ,OAAqB,kBAAC,EAAD,CAAQC,KAAMA,EAAM8B,IAAOhC,EAAIA,GAAIA,EAAIC,IAAKA,OACvGgC,EAAkBf,EAAMgB,YAAYH,KAAI,gBAAE/B,EAAF,EAAEA,GAAIY,EAAN,EAAMA,KAAN,OAAgB,kBAAC,EAAD,CAASA,KAAMA,EAAMoB,IAAOhC,EAAIA,GAAIA,OAOhG,OACI,yBAAKI,UAAWC,IAAG8B,kBACf,yBAAK/B,UAAWC,IAAG+B,gBACf,kBAACtB,EAAD,CAAOuB,MAAO,GAAd,8CACA,6BAEQR,IAIZ,yBAAKzB,UAAWC,IAAGiC,mBACf,yBAAKlC,UAAWC,IAAG6B,aAEXD,GAGR,kBAAC,EAAD,CAAgBd,SApBP,SAACoB,GAClBrB,EAAMsB,aAAaD,EAASE,kB,wDCNrBC,EAtBQ,SAACC,GAAe,IAC7BC,EAD4B,iLAI1B,OAAKC,KAAK3B,MAAM4B,KAIT,kBAACH,EAAcE,KAAK3B,OAHhB,kBAAC,IAAD,CAAUf,GAAG,eALE,GACM4C,IAAMJ,WAkB9C,OAAOK,aANe,SAACC,GACnB,MAAO,CACHH,KAAMG,EAAMH,KAAKI,UAIlBF,CAA2BJ,I,QCPvBO,sBACXT,EACAM,aAVkB,SAACC,GAAY,MAAO,CAClCnB,WAAYmB,EAAMG,YAAYtB,WAC9BI,YAAae,EAAMG,YAAYlB,YAC/BO,WAAYQ,EAAMG,YAAYX,cAOT,CAACD,mBAFfW,CAE+BvB","file":"static/js/5.154ad2a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__wrapper\":\"Dialogs_dialogs__wrapper__2kVSq\",\"dialogs__names\":\"Dialogs_dialogs__names__wzElR\",\"dialogs__messages\":\"Dialogs_dialogs__messages__vvCMp\",\"dialogs__avatar\":\"Dialogs_dialogs__avatar__24aq4\",\"dialogs__user\":\"Dialogs_dialogs__user__KQ5nN\"};","import React from 'react';\r\nimport cn from '../index.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Avatar, Typography} from \"antd\";\r\n\r\nconst {Text} = Typography;\r\nconst Dialog = ({id, ava, name}) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/dialogs/\"+id} className={cn.dialogs__user}>\r\n                {ava ?\r\n                    <Avatar size = \"large\" src={ava} alt=\"ava\" />\r\n                    :<Avatar size=\"large\" icon=\"user\" />}\r\n                <Text> {name}</Text>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport cn from '../index.module.css';\r\nimport {Typography} from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst Message = ({text}) => {\r\n    return (\r\n        <div>\r\n            <Text className={cn.messageList__from}>{text}</Text>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\nimport cn from './index.module.css';\nimport Dialog from \"./Dialog/\";\nimport Message from \"./Message/\";\nimport {reduxForm} from \"redux-form\";\nimport {createField, TextareaField} from \"../common/FormComponents/FormComponents\";\nimport {maxValueCreator, required} from \"../common/validate/validate\";\nimport {Button, Typography} from \"antd\";\n\nconst { Title } = Typography;\n\nconst maxLength50 = maxValueCreator(50);\n\nlet AddMessageForm = (props) => {\n    return (\n        <form onSubmit = {props.handleSubmit} className={cn.messageAdd}>\n            {createField(\"newMessage\", TextareaField, \"Введите текст сообщения...\",[required, maxLength50])}\n            <div>\n                <Button type={\"primary\"}>Добавить сообщение</Button>\n            </div>\n        </form>\n    )\n};\n\nAddMessageForm = reduxForm({form: \"addMessage\"})(AddMessageForm);\n\nconst Dialogs = (props) => {\n    let dialogElements = props.dialogList.map(({id, name, ava}) => <Dialog name={name} key = {id} id={id} ava={ava}/>);\n    let messageElements = props.messageList.map(({id, text}) => <Message text={text} key = {id} id={id}/>);\n\n\n    const onAddMessage = (formData) => {\n        props.onAddMessage(formData.newMessage);\n    };\n\n    return (\n        <div className={cn.dialogs__wrapper}>\n            <div className={cn.dialogs__names}>\n                <Title level={2}>Диалоги</Title>\n                <div>\n                    {\n                        dialogElements\n                    }\n                </div>\n            </div>\n            <div className={cn.dialogs__messages}>\n                <div className={cn.messageList}>\n                    {\n                        messageElements\n                    }\n                </div>\n                <AddMessageForm onSubmit = {onAddMessage}/>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;\n","import React, {component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet withAuthRedirect = (Component) => {\r\n    class WithAuthRedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.auth) {\r\n                return <Redirect to=\"/login\" />\r\n            }\r\n\r\n            return <Component {...this.props}/>\r\n\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            auth: state.auth.isAuth\r\n        }\r\n    };\r\n\r\n    return connect(mapStateToProps, )(WithAuthRedirectComponent);\r\n};\r\n\r\nexport default withAuthRedirect;","import React from 'react';\nimport {onAddMessage} from \"../../Redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => { return {\n        dialogList: state.dialogsPage.dialogList,\n        messageList: state.dialogsPage.messageList,\n        newMessage: state.dialogsPage.newMessage,\n}};\n\n\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {onAddMessage}))(Dialogs);\n"],"sourceRoot":""}