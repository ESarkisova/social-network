{"version":3,"sources":["components/Dialogs/index.module.css","components/Dialogs/Dialog/index.jsx","components/Dialogs/Message/index.jsx","components/Dialogs/Dialogs.jsx","HOC/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","id","ava","name","to","className","cn","dialogs__nameActive","src","alt","dialogs__avatar","Message","text","messageList__from","maxLength50","maxValueCreator","AddMessageForm","props","onSubmit","handleSubmit","messageAdd","createField","Textarea","required","reduxForm","form","Dialogs","dialogElements","dialogList","map","key","messageElements","messageList","dialogs__wrapper","dialogs__names","dialogs__messages","formData","onAddMessage","newMessage","withAuthRedirect","Component","WithAuthRedirectComponent","this","auth","React","connect","state","isAuth","compose","dialogsPage"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,eAAiB,gCAAgC,kBAAoB,mCAAmC,gBAAkB,mC,+FCclLC,EAXA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,KACtB,OACI,6BACI,kBAAC,IAAD,CAASC,GAAI,YAAYH,EAAII,UAAWC,IAAGC,qBACvC,yBAAKC,IAAKN,EAAKO,IAAI,MAAMJ,UAAWC,IAAGI,kBACtCP,KCEFQ,EARC,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACd,OACI,6BACI,yBAAKP,UAAWC,IAAGO,mBAAoBD,K,yBCE7CE,EAAcC,YAAgB,IAEhCC,EAAiB,SAACC,GAClB,OACI,0BAAMC,SAAYD,EAAME,aAAcd,UAAWC,IAAGc,YAC/CC,YAAY,aAAcC,IAAU,qBAAqB,CAACC,IAAUT,IACrE,6BACI,kDAMhBE,EAAiBQ,YAAU,CAACC,KAAM,cAAjBD,CAAgCR,GAEjD,IAgCeU,EAhCC,SAACT,GACb,IAAIU,EAAiBV,EAAMW,WAAWC,KAAI,gBAAE5B,EAAF,EAAEA,GAAIE,EAAN,EAAMA,KAAMD,EAAZ,EAAYA,IAAZ,OAAqB,kBAAC,EAAD,CAAQC,KAAMA,EAAM2B,IAAO7B,EAAIA,GAAIA,EAAIC,IAAKA,OACvG6B,EAAkBd,EAAMe,YAAYH,KAAI,gBAAE5B,EAAF,EAAEA,GAAIW,EAAN,EAAMA,KAAN,OAAgB,kBAAC,EAAD,CAASA,KAAMA,EAAMkB,IAAO7B,EAAIA,GAAIA,OAOhG,OACI,yBAAKI,UAAWC,IAAG2B,kBACf,yBAAK5B,UAAWC,IAAG4B,gBACf,qCACA,6BAEQP,IAIZ,yBAAKtB,UAAWC,IAAG6B,mBACf,yBAAK9B,UAAWC,IAAG0B,aAEXD,GAGR,kBAAC,EAAD,CAAgBb,SApBP,SAACkB,GAClBnB,EAAMoB,aAAaD,EAASE,kB,wDCHrBC,EAtBQ,SAACC,GAAe,IAC7BC,EAD4B,iLAI1B,OAAKC,KAAKzB,MAAM0B,KAIT,kBAACH,EAAcE,KAAKzB,OAHhB,kBAAC,IAAD,CAAUb,GAAG,eALE,GACMwC,IAAMJ,WAkB9C,OAAOK,aANe,SAACC,GACnB,MAAO,CACHH,KAAMG,EAAMH,KAAKI,UAIlBF,CAA2BJ,I,OCPvBO,sBACXT,EACAM,aAVkB,SAACC,GAAY,MAAO,CAClClB,WAAYkB,EAAMG,YAAYrB,WAC9BI,YAAac,EAAMG,YAAYjB,YAC/BM,WAAYQ,EAAMG,YAAYX,cAOT,CAACD,mBAFfW,CAE+BtB","file":"static/js/4.111c9dc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__wrapper\":\"Dialogs_dialogs__wrapper__2kVSq\",\"dialogs__names\":\"Dialogs_dialogs__names__wzElR\",\"dialogs__messages\":\"Dialogs_dialogs__messages__vvCMp\",\"dialogs__avatar\":\"Dialogs_dialogs__avatar__24aq4\"};","import React from 'react';\r\nimport cn from '../index.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = ({id, ava, name}) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/dialogs/\"+id} className={cn.dialogs__nameActive}>\r\n                <img src={ava} alt=\"ava\" className={cn.dialogs__avatar}/>\r\n                {name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport cn from '../index.module.css';\r\n\r\nconst Message = ({text}) => {\r\n    return (\r\n        <div>\r\n            <div className={cn.messageList__from}>{text}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\nimport cn from './index.module.css';\nimport Dialog from \"./Dialog/\";\nimport Message from \"./Message/\";\nimport {reduxForm} from \"redux-form\";\nimport {createField, Textarea} from \"../common/FormComponents/FormComponents\";\nimport {maxValueCreator, required} from \"../common/validate/validate\";\n\nconst maxLength50 = maxValueCreator(50);\n\nlet AddMessageForm = (props) => {\n    return (\n        <form onSubmit = {props.handleSubmit} className={cn.messageAdd}>\n            {createField(\"newMessage\", Textarea, \"Enter your text...\",[required, maxLength50])}\n            <div>\n                <button>Add message</button>\n            </div>\n        </form>\n    )\n};\n\nAddMessageForm = reduxForm({form: \"addMessage\"})(AddMessageForm);\n\nconst Dialogs = (props) => {\n    let dialogElements = props.dialogList.map(({id, name, ava}) => <Dialog name={name} key = {id} id={id} ava={ava}/>);\n    let messageElements = props.messageList.map(({id, text}) => <Message text={text} key = {id} id={id}/>);\n\n\n    const onAddMessage = (formData) => {\n        props.onAddMessage(formData.newMessage);\n    };\n\n    return (\n        <div className={cn.dialogs__wrapper}>\n            <div className={cn.dialogs__names}>\n                <h2>Names</h2>\n                <div>\n                    {\n                        dialogElements\n                    }\n                </div>\n            </div>\n            <div className={cn.dialogs__messages}>\n                <div className={cn.messageList}>\n                    {\n                        messageElements\n                    }\n                </div>\n                <AddMessageForm onSubmit = {onAddMessage}/>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;\n","import React, {component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet withAuthRedirect = (Component) => {\r\n    class WithAuthRedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.auth) {\r\n                return <Redirect to=\"/login\" />\r\n            }\r\n\r\n            return <Component {...this.props}/>\r\n\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            auth: state.auth.isAuth\r\n        }\r\n    };\r\n\r\n    return connect(mapStateToProps, )(WithAuthRedirectComponent);\r\n};\r\n\r\nexport default withAuthRedirect;","import React from 'react';\nimport {onAddMessage} from \"../../Redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => { return {\n        dialogList: state.dialogsPage.dialogList,\n        messageList: state.dialogsPage.messageList,\n        newMessage: state.dialogsPage.newMessage,\n}};\n\n\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {onAddMessage}))(Dialogs);\n"],"sourceRoot":""}